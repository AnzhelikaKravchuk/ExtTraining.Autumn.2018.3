using System;
using System.IO;
using System.Linq;
using System.Text;

namespace No4.Solution
{
    public class RandomCharsFileGenerator : RandomFileGenerator
    {
        /// <summary>
        /// Overrides parent GenerateFileContent method 
        /// </summary>
        /// <param name="contentLength">Content legth</param>
        /// <returns>Generated byte array</returns>
        protected override byte[] GenerateFileContent(int contentLength)
        {
            var generatedString = this.RandomString(contentLength);

            var bytes = Encoding.Unicode.GetBytes(generatedString);

            return bytes;
        }

        /// <summary>
        /// Overrides parent WriteBytesToFile method
        /// </summary>
        /// <param name="fileName">File name</param>
        /// <param name="content">File content</param>
        protected override void WriteBytesToFile(string fileName, byte[] content)
        {
            if (!Directory.Exists(WorkingDirectory))
            {
                Directory.CreateDirectory(WorkingDirectory);
            }

            File.WriteAllBytes($"{WorkingDirectory}//{fileName}", content);
        }

        private string RandomString(int Size)
        {
            var random = new Random();

            const string input = "abcdefghijklmnopqrstuvwxyz0123456789";

            var chars = Enumerable.Range(0, Size).Select(x => input[random.Next(0, input.Length)]);

            return new string(chars.ToArray());
        }     
    }
}